apply plugin: 'com.android.application'

android {

    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.amv.access.sdk.sample"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        versionCode project.ext.versionCode
        versionName project.ext.versionName

        archivesBaseName = "amv-access-reference-app-${versionName}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debugTest {
            applicationIdSuffix ".debugTest"
            debuggable true
            minifyEnabled false
            versionNameSuffix "-staging-test"
            resValue "string", "app_name", "amv Access Ref App Debug Test"
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            versionNameSuffix '-staging'
            resValue "string", "app_name", "amv Access Ref App Debug"
        }
        releaseTest {
            applicationIdSuffix ".test"
            minifyEnabled false
            versionNameSuffix '-test'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "amv Access Ref App Test"
        }
        release {
            applicationIdSuffix ""
            minifyEnabled false
            versionNameSuffix ""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "amv Access Ref App"
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
    }
}

dependencies {
    implementation "com.github.amv-networks.amv-access-sdk-android:amv-hm-access-sdk:${amvAccessSdkVersion}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"

    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation "com.jakewharton:butterknife:${butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeVersion}"

    testImplementation "junit:junit:${junitVersion}"
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.2-alpha01'
}
